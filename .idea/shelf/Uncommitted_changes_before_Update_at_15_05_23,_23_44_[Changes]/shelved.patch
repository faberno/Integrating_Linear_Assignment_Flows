Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Integrating_Linear_Assignment_Flows\nA comparison of methods for Integrating Linear Assignment Flows\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision f7897bfbf837fa4b84d647e33c721b550a91b191)
+++ b/README.md	(date 1684185492917)
@@ -1,2 +1,95 @@
-# Integrating_Linear_Assignment_Flows
-A comparison of methods for Integrating Linear Assignment Flows
+<div align="center">
+  <h3 align="center">Bachelor Thesis</h3>
+
+  <p align="center">
+    Comparison of Methods for Integrating Linear Assignment Flows
+    <br />
+    <!-- <a href="https://github.com/othneildrew/Best-README-Template"><strong>Explore the docs »</strong></a>
+    <br />
+    <br />
+    <a href="https://github.com/othneildrew/Best-README-Template">View Demo</a>
+    ·
+    <a href="https://github.com/othneildrew/Best-README-Template/issues">Report Bug</a>
+    ·
+    <a href="https://github.com/othneildrew/Best-README-Template/issues">Request Feature</a>
+    -->  
+</p>
+</div>
+
+## About The Project
+
+The objective of this thesis is to evaluate the error and time complexity of both the
+Explicit Euler Method and the Krylov Subspace Method, depending on their respective
+parameters _step_ _size_ and _subspace_ _dimension_, so we can assess their performance in a
+direct comparison.
+
+## Background
+This section will cover the background of the thesis very briefly. For more information, be sure to take a look at the full document.
+### Linear Assignment Flow
+The Linear Assignment Flow (Zeilmann et al., 2020) is represented by an ODE on the
+tangent space
+```math
+\mathcal{T}_0 = \{T \in \mathbb{R}^{I\times J}: T\mathbb{1}=\mathbb{0}\}
+``` 
+at the barycenter of the assignment Manifold
+```math
+\mathcal{W}=\{W \in \mathbb{R}^{I\times J}: W_{i,j} > 0, W\mathbb{1}=\mathbb{1}\}
+``` 
+meaning that every row of $W\in \mathcal{W}$ represents a pixel and every column a label. The
+resulting entries then represent the probability of pixel $i$ being mapped to label $j$, so
+that every row sums up to 1.
+It is represented by an ODE of the form
+```math
+\dot V(t) = A\:V(t)+b, \quad V(0)=0\in \mathbb{R}^{IJ}
+``` 
+where 
+* $V(t) \in \mathcal{T}_0$ is our tangent vector 
+* $A \in \mathbb{R}^{IJ\times IJ}$ represents the weights in pixel neighborhood
+* $b \in \mathbb{R}^{IJ}$ carries the image data
+
+For a standard sized image of $500\times500$ pixels and 5 prototypes, the system will result
+in the dimension
+```math
+\mathbb{R}^{1\,250\,000} = \mathbb{R}^{1\,250\,000\times 1\,250\,000} \cdot \mathbb{R}^{1\,250\,000}
+```
+so sparse matrix representations have to be used.
+
+### Matrix Exponential and φ-Functions
+For a matrix $A \in \mathbb{R}^{n\times n}$ we define the matrix exponential to be the $n\times n$ matrix
+```math
+e^{A}=\sum_{j=0}^{\infty}\frac{A^{j}}{j!}.
+```
+The φ-Functions represent special cases of the Mittag-Leffler Function and have the form
+```math
+\varphi_{0}(z) = e^{A},\quad \varphi_{1}(A) = \frac{e^{A}-\mathbb{I}}{A}
+```
+
+The solution of an inhomogeneous ODE is given by
+```math
+x(t) = \varphi_{0}(tA)x_{0}+t\cdot \varphi_{1}(tA)\cdot b
+```
+respectively
+```math
+x(t) = t\cdot \varphi_{1}(tA)\cdot b
+```
+if $x_0=0$.
+### Explicit Euler Method
+The Explicit Euler Method (also called ”forward Euler“) is the most basic method to solve an ODE.
+It is calculated iteratively by
+```math
+x_{n+1} = x_n + (Ax_n + b)h.
+```
+where $h$ is a step size.
+### Krylov Subspace Method
+The Krylov Subspace Method (Niesen and Wright, 2012, pp. 4-6) is a more advanced method than the Explicit Euler Method. It tries to approximate $\varphi_p(A)x$ which lives in $\mathbb{R}^n$ by using the Krylov Subspace
+```math
+\mathcal{K}_m(A, x) = span\{x, Ax, A^2x, \ldots, A^{m-1}x\}, \quad m \leq n. 
+```
+## References
+```math
+\mathcal{K}_m(A, x) = span\{x, Ax, A^2x, \ldots, A^{m-1}x\}, \quad m \leq n. 
+```
+## License
+Distributed under the MIT License. See `LICENSE.txt` for more information.
+
+<p align="right">(<a href="#readme-top">back to top</a>)</p>
\ No newline at end of file
